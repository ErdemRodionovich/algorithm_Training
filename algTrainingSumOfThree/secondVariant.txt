#include <iostream>
#include <sstream>
#include <fstream>
#include <vector>
#include <map>
#include <set>

using namespace std;

int main() {

	ifstream fin("threesum.in");
	ofstream fout("threesum.out");
	long long s;
	string str;
	getline(fin, str);
	istringstream s_s(str);
	s_s>>s;
	vector<set<pair<long long, int>>>nums;
	int j=0;
	long long curSum=0, minSum=0, maxSum=0;
	map<int, set<pair<long long, int>>::iterator>curDigits;
	while(getline(fin, str)){

		set<pair<long long, int>>m;

		istringstream s_2(str);
		int n;
		long long d;
		s_2>>n;
		for(int i=0; i<n; i++){

			s_2>>d;
			auto it = m.lower_bound({d, 0});
			if(it == m.end() || it->first != d){
				m.insert({d, i});
			}

		}

		int l = j;
		map<int, set<pair<long long, int>>>digs;
		for(auto it = curDigits.begin(); it != curDigits.end(); it++){
			digs[it->first] = it->second;
		}

		for(auto it = m.begin(); it != m.end(); it++){


			if(j > 0){
				auto p = digs[l];
			}

		}


		auto it = m.end();
		it--;
		maxSum += it->first;
		minSum += m.begin()->first;
		nums.push_back(m);
		j++;

	}



	return 0;
}
